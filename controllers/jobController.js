
import jobModel from '../models/jobModel.js'

// POST api to create Job
export const createJobController = async(req,res,next) =>{
    try{
        const{company,position,jobType} =req.body
        if(!company || !position){
            next('Please provide values')
        }
        if(jobType === 'Teaching'){
            next('Teaching job is not allowed')
        }
    
        const newJob ={
            company,
            position
        }
    
        const job = await jobModel.create(newJob)
        res.status(200).json({
            success:true,
            message: 'job added successfully'
        })
    
    }catch(err){

    }
}

export const getAllJobController = async(req,res,next) =>{
try{
    const jobs = await jobModel.find();
// ?we will get all the jobs stored in jobs
res.status(200).json({
    success:"true",
    jobs,
    totalJobs: jobs.length
})
}catch(err){

}

}

export const updateJobController = async(req,res,next) =>{
   
//    we can use try and catch if we have any error from mongodb
    try{
        // from the front end we will get id
        // we'll recieve the id in params since we are recieving the id along with the api
        const {id} = req.params
        // what do you want to update- all things or specific things
        // using put we can update every data
        // patch to update few data
        // let us say we need to update workLocation,position 
        // when we call the api , we will pass the info u want to update into the body and you will take this information from the user in the input field
        const{workLocation,position} =req.body

        if(!workLocation||!position){
            next('Please provide all fields')
        }
        // now we will find what we want to update
        const job = await jobModel.findOne({_id:id})
        // _id means unique id that is generated by mongodb whenever we post some data and we can access that data using this
        // _id:id we are checking if the id is same
        if(!job){
            next(`no job is found with this ${id}`)
        }


        // Now we have the job we need to update it 
        // first we need to give the id and the second object we should provide the update info
        const updateJob = await jobModel.findOneAndUpdate({_id:id},{
            workLocation: workLocation,
            position:position
        })
        // you can also write the above as like this , bcoz we are getting the info from frontend to update in the req.body
        // const updateJob = await jobModel.findOneAndUpdate({_id:id},req.body)

        res.status(200).json({
            // updateJob
            updateJob
        })
    }catch(err){
        err 
    }
}
export const deleteJobController = async(req,res,next) =>{
   
//    we can use try and catch if we have any error from mongodb
    try{
        // from the front end we will get id
        // we'll recieve the id in params since we are recieving the id along with the api
        const {id} = req.params
        const job = await jobModel.findOne({_id:id});
        if(!job){
            next("No job found")
        }
        await job.deleteOne({_id:id})
        res.status(200).json({
           message: "Job deletion success"
        })
    }catch(err){
        err 
    }
}